=begin
#Permit.io API

#Fullstack Authorization as a Service

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TenantsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TenantsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TenantsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TenantsApi' do
    it 'should create an instance of TenantsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TenantsApi)
    end
  end

  # unit tests for create_tenant
  # Create Tenant
  # Create a new Tenant under the active organization.
  # @param new_tenant 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Tenant]
  describe 'create_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_tenant
  # Delete Tenant
  # Delete an existing Tenant.
  # @param tenant_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [nil]
  describe 'delete_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tenant
  # Get Tenant
  # Retrieve Tenant details.
  # @param tenant_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Tenant]
  describe 'get_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_tenants
  # List Tenants
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip Skip first n results
  # @option opts [Integer] :limit Limit to n results
  # @option opts [String] :environment filter only objects belonging to this environment
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [TenantList]
  describe 'list_tenants test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sync_tenant
  # Sync Tenant
  # Create the Tenant if it doesn&#39;t already exist.
  # @param new_remote_tenant 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Tenant]
  describe 'sync_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_tenant
  # Update Tenant
  # Update the Tenant data.
  # @param tenant_id 
  # @param update_tenant 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Tenant]
  describe 'update_tenant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
