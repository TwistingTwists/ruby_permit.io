=begin
#Permit.io API

#Fullstack Authorization as a Service

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::ProjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::ProjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectsApi' do
    it 'should create an instance of ProjectsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::ProjectsApi)
    end
  end

  # unit tests for create_project
  # Create Project
  # Create a new client project under this organization.
  # @param new_project 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Project]
  describe 'create_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_project
  # Delete Project
  # Delete an existing Project.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [nil]
  describe 'delete_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_project
  # Get Project
  # Retrieve project details.
  # @param project_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Project]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_projects
  # List Projects
  # Get a list of projects that are configured under this organization.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :skip Skip first n results
  # @option opts [Integer] :limit Limit to n results
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [ProjectList]
  describe 'list_projects test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_project
  # Update Project
  # Update the project settings.
  # @param project_id 
  # @param update_project 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_organization_id The id of the active organization you want to query on
  # @return [Project]
  describe 'update_project test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
